// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum UnitType {
  cups
  tablespoon
  teaspoon
  custom
}

model Recipe {
    id String @id @unique @default(cuid())
    dishName String
    servings Int?
    prepTime Int?
    cookTime Int?
    ingredientsForRecipe ingredientsForRecipe[]
    instructions Instructions[]
    user user @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String

    @@index([userId])
}

model ingredientsForRecipe {
  id           String     @id @unique @default(cuid())
  recipe       Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  ingredient   ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  quantity     Float
  unit         String
  recipeId     String
  ingredientId String

  @@unique([recipeId, ingredientId])
  @@index([ingredientId])
}

model ingredient {
    id String @id @unique @default(cuid())
    name String
    unitType UnitType
    ingredientOnRecipe ingredientsForRecipe[]
    user user @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId             String

    @@index([userId])
}

model user {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    recipes     Recipe[]
    ingredients ingredient[]
}

model Instructions {
  id String @id @unique @default(cuid())
  stepNumber Int
  stepDescription String
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String

  @@index([recipeId])
}